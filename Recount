#include <iostream>
#include<conio.h>
#include<stdio.h>
#include<fstream>
#include<string.h>
using namespace std;
class candidate
{
    char name[30];
    long votes;
public:
    char*Rname()
    {
	return name;
    }
    long Rvotes()
    {
	return votes;
    }
    void update()
    {
	votes++;
    }
    void add(char st[])
    {
	strcpy(name,st);
	votes=1;

    }
};
int toupdate(char st[])
{
    fstream f;
    candidate ob;
    int flag=0;
    f.open("votes.dat",ios::in|ios::out|ios::binary);
    while(f.read((char*)&ob,sizeof(ob)))
    {
	if(strcmp(ob.Rname(),st)==0)
	{
	    ob.update();
	    f.seekg(f.tellg()-sizeof(ob));
	    f.write((char*)&ob,sizeof(ob));
	    flag=1;
	}
    }
    f.close();
    return flag;
}
void dispall()
{
    fstream f;
    char st[30];
    candidate ob;
    int cnt=0,max=0;
    f.open("votes.dat",ios::in|ios::binary);
    while(f.read((char*)&ob,sizeof(ob)))
    {
	if(ob.Rvotes()>max)
	{
	    max=ob.Rvotes();
	    strcpy(st,ob.Rname());
	}
    }
    f.close();
    f.open("votes.dat",ios::in|ios::binary);
    while(f.read((char*)&ob,sizeof(ob)))
    {
	if(ob.Rvotes()==max)
	{
	   cnt++;
	}
    }
    f.close();
    if(cnt==1)
    cout<<st;
    else
    cout<<"Runoff!";
}
int main()
{
    char st[30];
    int flag=0;
    fstream f;
    candidate ob;
    remove("votes.dat");
    while(1)
    {
	gets(st);
	if(strcmp(st,"***")==0)
	break;
	flag=toupdate(st);
	if(flag==0)
	{
	    f.open("votes.dat",ios::app|ios::binary);
	    ob.add(st);
	    f.write((char*)&ob,sizeof(ob));
	    f.close();
	}
    }
    dispall();
    getch();
}

